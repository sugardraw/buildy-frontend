import React from "react";
import axios from "axios";
import {
  Image,
  StyleSheet,
  View,
  TouchableWithoutFeedback,
  Text,
  Button,
  ScrollView,
  Linking
} from "react-native";
import { FileSystem, MailComposer } from "expo";
import { Card } from "react-native-elements";
const Expo = require("expo");
import { MaterialIcons } from "@expo/vector-icons";

import { api } from "../../api/api";

export default class SendEmail extends React.Component {
  constructor() {
    super();
    this.state = {
      lastRequest: null,
      uploaded: false
    };
  }

  componentWillMount() {
    const id = this.props.navigation.getParam("id", "no_id");
    const title = this.props.navigation.getParam("title", "no_title");

    return axios
      .get(api + "/api/user/request/showLast?id=" + id + "&title=" + title)
      .then(response => {
        this.setState(state => {
          state.lastRequest = response.data;
          //   state.uploaded = !state.uploaded;
          return state;
        });
      })

      .catch(err => console.log(err));
  }

  sendAsEmail = async () => {
    let uriArray = [];

    for (let i in this.state.lastRequest.data.editedImages) {
      uriArray.push(this.state.lastRequest.data.editedImages[i].uri);
    }

    /**
     * informations to be implemented:
     *
     * recipients will be updated with the company email
     * subject or more emails, if you want to send to many diferent
     * companies
     *
     *
     */

    await MailComposer.composeAsync({
      recipients: ["sergiousle@gmail.com"],
      subject: "estimation request from USER-TEST",
      body: `To Whom It May Concern,
      
      I would like to ask for a price estimation for an inner reform 
      in my house.
      More details in the following text:
            
      Title: ${this.state.lastRequest.data.requestData.title}
      Description: ${this.state.lastRequest.data.requestData.description}
      Budget: ${this.state.lastRequest.data.requestData.budget}
      Preferred starting date:${this.state.lastRequest.data.requestData.date}
      I attached to this email some pictures in order to illustrate better 
      my expectation.
      I look forward to have news from you,
      Thanks in advance, 
      TEST USER


      ________________________________________________
      this email was automatically generated by BUILDY`,
      attachments: uriArray
    });
  };

  sendAsEmailToMany = () => {
    console.log("send to many");
  };

  createNewReq = () => {
    this.props.navigation.navigate("RequestFormular");
  };

  keyExtractor = (item, index) => String(item._id);

  render() {
    if (this.state.lastRequest !== null) {
      return (
        <View style={styles.container}>
          <View style={styles.request_data}>
            <ScrollView
              style={{ flex: 1, marginTop: 20 }}
              contentContainerStyle={{ width: "100%", alignItems: "center" }}
            >
              <Card style={styles.infos}>
                <Text style={styles.title}>Your estimation request</Text>
                <Text style={[styles.title, styles.tagline]}>
                  review your information before you send it
                </Text>

                <View style={styles.infos}>
                  <Text>
                    Title: {this.state.lastRequest.data.requestData.title}
                  </Text>
                  <Text>
                    Description:{" "}
                    {this.state.lastRequest.data.requestData.description}
                  </Text>
                  <Text>
                    Budget: {this.state.lastRequest.data.requestData.budget}
                  </Text>
                  <Text>
                    Starting Date:{" "}
                    {this.state.lastRequest.data.requestData.date}
                  </Text>
                </View>
              </Card>
              {this.state.lastRequest.data.editedImages.map((item, index) => {
                return (
                  <TouchableWithoutFeedback key={index}>
                    <Card>
                      {console.log(item.uri)}
                      <Image
                        key={index}
                        style={{ width: 250, height: 250 }}
                        source={{ uri: item.uri }}
                      />
                    </Card>
                  </TouchableWithoutFeedback>
                );
              })}
            </ScrollView>
          </View>

          <View style={styles.buttonsField}>
            <Button
              style={styles.button}
              onPress={this.createNewReq}
              title="Create a new Request"
              color="#9FCBE5"
            />

            <Button
              style={styles.button}
              title="Send"
              onPress={this.sendAsEmail}
              color="#9FCBE5"
            />
            <Button
              style={styles.button}
              title="Send to several companies"
              onPress={this.sendAsEmailToMany}
              color="#9FCBE5"
            />
          </View>
        </View>
      );
    } else {
      return (
        <View style={styles.container}>
          <Text> No data found...</Text>
        </View>
      );
    }
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "white"
  },
  title: {
    fontSize: 24
  },
  tagline: {
    fontSize: 12
  },
  infos: {
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 }
  },
  buttonsField: {
    paddingLeft: 10,
    paddingRight: 10,
    marginTop: -30,
    flexDirection: "row",
    width: "100%",
    flex: 1,
    justifyContent: "space-around"
  },
  button: {
    margin: 3,
    borderBottomColor: "black",
    borderBottomWidth: 2,
    backgroundColor: "white"
  },
  request_card: {
    backgroundColor: "#fff",
    padding: 8,
    margin: 12,
    borderWidth: 1,
    borderRadius: 2,
    borderColor: "#ddd",
    borderBottomWidth: 0,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 2
  }
});
